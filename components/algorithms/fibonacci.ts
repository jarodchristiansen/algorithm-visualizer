import { SWAP } from "../helper/constants";
import { swap } from "../helper/swap";

// returns the fibonacci sequence generated by fibonacciGenerator, needs moves conversion.
export const fibonacci = async (array: number[], length: number) => {

  let moves = [[0, 1, 1], [1, 1, 2]]
  // let moves = []
  
  for (let i = 0; i<length -1; i++) {
    moves.push([array[i], array[i+1], array[i] + array[i+1]])
  }

  // moves.push([moves])

  // let results = moves.at(-1);
  // let last = results.at(-1)
  // // for (let i = 0; i < length - 1; ++i) {
  // //   for (let j = 0; j < length - i - 1; ++j) {
  // //     if (array[j] > array[j + 1]) {
  // //       await swap(array, j, j + 1);
  // //       moves.push([j, j + 1, SWAP]);
  // //     } else {
  // //       moves.push([j, j + 1, !SWAP]);
  // //     }
  // //   }
  // // }
  // moves.push([last])

  console.log({moves})


  return moves;
};
